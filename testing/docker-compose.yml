version: '3.1'
networks:
  default:
    external:
      name: cloud
services:
  zoo:
    image: zookeeper
    restart: on-failure
    hostname: zoo
    ports:
    - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
    networks:
      - default

  rmq:
    image: rabbitmq:3.8.3-alpine
    networks:
      - default
    #container_name: rabbitmq
   
  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 20 && python sender_v2.py"
    ports:       
    - "80:80"
    volumes:
    - .:/code
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker 
    depends_on:
    - zoo
    - rmq
    restart: on-failure    
    networks:
      - default

  worker_1:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 25 && python master_v4.py testing_worker_1_1 & python db_op.py"
    depends_on:
    - zoo
    - rmq
    volumes:
    - .:/code
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    links:
    - zoo
    - rmq
    restart: on-failure
    networks:
    - default
  
  worker_2:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 25 && python master_v4.py testing_worker_2_1 & python db_op.py"
    depends_on:
    - zoo
    - rmq
    volumes:
    - .:/code
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    links:
    - zoo
    - rmq
    restart: on-failure
    networks:
    - default

